def encode(mtf_string, freq):
    """
    This method encode all zeroes generated by Move To Front transformation with Run Length Encoding
    :param mtf_string: MTF generated list
    :return: RLE encoded MTF list
    """
    rle_string = []
    last_run_start = -1
    last_run_end = -1
    last_run_length = 0

    for i in xrange(len(mtf_string)):
        if mtf_string[i] == 0:
            last_run_length += 1
            if i == len(mtf_string) - 1 or mtf_string[i+1] != 0:
                rle_string.append(0)
                rle_string.append(last_run_length)
                freq[0] -= last_run_length - 1
                if freq.get(last_run_length):
                    freq[last_run_length] +=1
                else:
                    freq[last_run_length] = 1
                last_run_length = 0
        else:
            rle_string.append(mtf_string[i])

    return rle_string, freq


def decode(rle_string):
    """
    Decode RLE encoded MTF string
    :param rle_string: RLE encoded list
    :return: MTF encoded list
    """
    mtf_string = []
    for i in xrange(len(rle_string)):
        if rle_string[i] == 0:
            for _ in xrange(rle_string[i+1]):
                mtf_string.append(0)
        elif i != 0 and rle_string[i-1] == 0:
            continue
        else:
            mtf_string.append(rle_string[i])
    return mtf_string
